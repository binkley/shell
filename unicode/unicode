#!/usr/bin/env bash

export PS4='+${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): } '

case $BASH_VERSION in
3.* | 4.0.* | 4.1.* ) cat <<EOW >&2 ;;
${0##*/}: WARNING: BASH $BASH_VERSION does not display UNICODE characters
EOW
esac

url=http://www.unicode.org/Public/UNIDATA/UnicodeData.txt
unidata=UnicodeData.txt

function print_help {
    local -r width=$(( $(tput cols) - 2 ))
    cat <<EOH | fold -s -w $width
Usage: ${0##*/} [OPTION]... PATTERN [PATTERN]...
Finds matching UNICODE characters.

PATTERN is a BASH regular expression.  Matching is case-insensitive.

Automatically downloads $unidata, caching for next execution.

  -U, --unidata-url URL   use UNICODE data from URL (default: $url)
  -h, --help              print help and exit normally
  -o, --offline           run local copy, do not update
  -u, --unidata FILE      use UNICODE data from FILE (default: $unidata)
  -v, --verbose           print verbose output

Examples:
  ${0##*/} SMILE
EOH
}

function readable_file {
    local -r program=$1
    local -r file=$2
    if [[ ! -e $file ]]
    then
        cat <<EOE >&2 ; exit 2
$program: $file: No such file or directory
EOE
    fi

    if [[ ! -r $file ]]
    then
        cat <<EOE >&2 ; exit 2
$program: $file: Permission denied
EOE
    fi

    if [[ -d $file ]]
    then
        cat <<EOE >&2 ; exit 2
$program: $file: Is a directory
EOE
    fi
}


offline=false
while getopts :U:hou:v-: opt
do
    [[ - == $opt ]] && opt=${OPTARG%%=*} OPTARG=${OPTARG%*=}
    case $opt in
    U | unidata-url ) url=$OPTARG ;;
    h | help ) print_help ; exit 0 ;;
    o | offline ) offline=true ;;
    u | unidata ) unidata=$OPTARG ;;
    v | verbose ) verbose=true ;;
    : ) cat <<EOE >&2 ; exit 2 ;;
${0##*/}: option requires an argument -- '$OPTARG'
Try '${0##*/} --help' for more information.
EOE
    ? ) cat <<EOE >&2 ; exit 2 ;;
${0##*/}: invalid option -- '$OPTARG'
Try '${0##*/} --help' for more information.
EOE
    esac
done
shift $((OPTIND - 1))

case $# in
0 ) cat <<EOE >&2 ; exit 2 ;;
${0##*/}: missing operand
Try '${0##*/} --help' for more information.
EOE
esac

trap 'rm -f $tmp' EXIT
readonly tmp=$(mktemp 2>/dev/null || mktemp -t ${0##*/})

# Check lastest UNICODE data
if $offline
then
    :
elif curl --fail -L -z $unidata -O -R $url >/dev/null 2>$tmp
then
    :
else
    readonly exit_code=$?
    cat <<EOE ; exit $exit_code
${0##*/}: $url: $(sed -n 's/.*curl: ([0-9]*) //p' $tmp)
EOE
fi

readable_file ${0##*/} $unidata

shopt -s nocasematch

while IFS=';' read code_value character_name general_category \
    canonical_combining_classes bidirectional_category \
    character_decomposition_mapping decimal_digit_value digit_value \
    numeric_value mirrored unicode_1_0_name comment_field_10646 \
    uppercase_mapping lowercase_mapping titlecase_mapping
do
    for pattern
    do
        if [[ $character_name =~ $pattern ]]
        then
            echo -e "$character_name (U+$code_value) \U$code_value"
        fi
    done
done <$unidata
