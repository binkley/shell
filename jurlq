#!/bin/bash

export PS4='+${BASH_SOURCE}:${LINENO}:${FUNCNAME[0]:+${FUNCNAME[0]}():} '

set -e
set -o pipefail

function dump-args {
    printf "\e[3m"
    cat <<EOD
head_args: $head_args
curl_args: ${curl_args[@]}
jq_args: ${jq_args[@]}

EOD
    printf "\e[0m"
}

curl_args=()
for arg
do
    case "$arg" in
    -- ) shift ; break ;;
    * ) curl_args=("${curl_args[@]}" "$arg") ; shift ;;
    esac
done
head_args=-D-
for curl_arg in "${curl_args[@]}"
do
    case "$curl_arg" in
    -I | --head ) head_args= ;;
    esac
done

let debug=0 || true
jq_args=()
for arg
do
    case "$arg" in
    -d ) let ++debug ; shift ;;
    * ) jq_args=("${jq_args[@]}" "$arg") ; shift ;;
    esac
done

if (( 0 < $# ))
then
    echo "$0: BUG: Unprocessed args: $@" >&2
    exit 2
fi

case $debug in
0 ) debug=false ;;
1 ) debug=true ; dump-args >&2 ;;
* ) debug=true ; dump-args >&2 ; set -x ;;
esac

# TODO: Heuristic, need to parse JQ args for options
color=false
[[ -t 1 ]] && color=true
[[ "${jq_args[@]}" =~ -([a-z][A-Z])*C([a-z][A-Z])* ]] && color=true
[[ "${jq_args[@]}" =~ -([a-z][A-Z])*M([a-z][A-Z])* ]] && color=false

curl -s $head_args "${curl_args[@]}" | tr -d '\r' | {
    json=false
    first=$color
    shopt -s nocasematch
    while read line
    do
        $first && {
            first=false
            printf "\e[1m$line\e[0m\n" "$line"
            continue
        }
        [[ -z "$line" ]] && { echo ; break ; }
        [[ "$line" =~ ^Content-Type:.*json ]] && json=true
        printf "%s\n" "$line"
    done

    if $json
    then
        jq "${jq_args[@]}"
    else
        if ((0 < $#))
        then
            echo "$0: jq arguments for non-JSON response: ${jq_args[@]}" >&2
            exit 2
        fi

        cat
    fi
}
