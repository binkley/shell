#!/usr/bin/env bash

# TODO: Evaluate alternatives
# TODO: Consider flags for pandoc and lynx

export PS4='+${BASH_SOURCE}:${LINENO}:${FUNCNAME[0]:+${FUNCNAME[0]}():} '

set -e
set -u
set -o pipefail

readonly version=1

: "${LINES:=$(tput lines)}"
export LINES
: "${COLUMNS:=$(tput cols)}"
export COLUMNS

: "${BROWSER:=lynx -stdin}"
export BROWSER

command -v pandoc >/dev/null || {
    echo "$0: Install pandoc" >&2
    exit 1
}

fmt=fmt
readonly fmt_width=$((COLUMNS - 5))
function setup-terminal() {
    if [[ ! -t 1 ]]; then
        readonly fmt=cat
        return 0
    fi

    if ((fmt_width < 10)); then
        echo "$0: Your terminal is too narrow." >&2
        readonly fmt=cat
        return 0
    fi

    fmt="fmt -w $fmt_width"
    readonly fmt
}

function print-usage() {
    cat <<EOU | $fmt
Usage: $0 [-h|--help][-m|--man][--version][-w|--web] MARKDOWN-FILE [VIEWER-OPTIONS]
EOU
}

function print-help() {
    echo "$0, version $version"
    print-usage
    cat <<EOH
Renders a single GitHub MARKDOWN-FILE to your BROWSER or PAGER.

Options:
  -h, --help    Print help and exit normally
  -m, --man     View as man page
  --version     Print version and exit normally
  -w, --web     View as HTML (default)

Examples:
  mdv README.md

Use the BROWSER environment variable to change your HTML renderer.
Use the PAGER environment variable to change your viewer for the "man" option.
EOH
}

function print-version() {
    cat <<EOV
${0##*/} $version
This is free and unencumbered software released into the public domain.
For more information, please refer to <http://unlicense.org/>.

Written by B. K. Oxley (binkley).
EOV
}

function is-single-file() {
    local file="$1"
    [[ ! -e "$file" ]] && {
        echo "$0: $file: No such file or directory" >&2
        exit 1
    }
    [[ -d "$file" ]] && {
        echo "$0: $file: Is a directory" >&2
        exit 1
    }
    [[ -r "$file" ]] || {
        echo "$0: $file: Permission denied" >&2
        exit 1
    }
}

function view-as-man() {
    local file="$1"
    shift
    is-single-file "$file"

    pandoc -s -f gfm -t man "$file" | groff -T utf8 -man | ${PAGER-less} "$@"
}

function view-as-web() {
    local file="$1"
    shift
    is-single-file "$file"

    pandoc -f gfm -t html5 "$file" | $BROWSER "$@"
}

setup-terminal

view=web
while getopts :hmvw-: opt; do
    [[ $opt == - ]] && opt=${OPTARG%%=*} OPTARG=${OPTARG#*=}
    case $opt in
    h | help)
        print-help
        exit 0
        ;;
    m | man) view=man ;;
    version)
        print-version
        exit 0
        ;;
    w | web) view=web ;;
    *)
        print-usage >&2
        exit 2
        ;;
    esac
done
shift $((OPTIND - 1))

file="$1"
shift 2 || true # Drop the --
view-as-$view "$file" "$@"
