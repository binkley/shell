#!/usr/bin/env bash

export PS4='+${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): } '
set -e
set -o pipefail

unset CDPATH # Trouble-maker

progname=${0##*/}
trap 'r=$? ; (( 0 == $r )) || echo "$progname: Failed" ; exit $r' EXIT
cd $(git rev-parse --show-toplevel)/.git/hooks

function usage() {
    echo "Usage: $progname <init|list>"
}

function help() {
    usage
}

function required() {
    cat >&2 <<EOM
$progname: Missing git config: $1
Try \`git config --local $1 <value>\` to set $1 for this repository.
EOM
    exit 2
}

function config() {
    local opts=(--get)
    while ((0 < $#)); do
        case $1 in
        --bool) opts=("${opts[@]}" $1) ;;
        -*)
            echo "$progname: BUG" >&2
            exit 3
            ;;
        *) break ;;
        esac
        shift
    done
    local config=hooks.$1
    git config "${opts[@]}" $config 2>/dev/null || echo "${2-required $config}"
}

function init() {
    while ((0 < $#)); do
        case $1 in
        -*)
            echo "$progname: BUG" >&2
            exit 3
            ;;
        *) break ;;
        esac
        shift
    done
    cat >hooks <<'EOS'
#!/bin/bash
hook=${0##*/}
hookd=$0.d
[[ -d $hookd ]] || exit 0
for h in $hookd/*
do
    [[ -x $h ]] || continue
    $h "$@" || exit $?
done
EOS
    chmod a+rx hooks
    for h in *.sample; do
        mkdir ${h%.sample}.d
        ln -s hooks ${h%.sample}
    done
}

function list() {
    while ((0 < $#)); do
        case $1 in
        -*)
            usage >&2
            exit 2
            ;;
        *) break ;;
        esac
        shift
    done
    case $# in
    1) local hook=$1 ;;
    *)
        usage >&2
        exit 2
        ;;
    esac
    cd $hook.d
    exec ls
}

while ((0 < $#)); do
    case $1 in
    --help) exec man ${0##*/} ;;
    -*)
        usage >&2
        exit 2
        ;;
    *) break ;;
    esac
done

case $# in
0)
    usage >&2
    exit 2
    ;;
esac

case $1 in
init | list) "$@" ;;
*)
    usage >&2
    exit 2
    ;;
esac
